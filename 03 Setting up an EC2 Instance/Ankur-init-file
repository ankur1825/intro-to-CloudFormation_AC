---
AWSTemplateFormatVersion: 2010-09-09

Description: |
  RITS DevOps Build & Deploy Pipeline for Spring Boot Microservices.
  Creates a CodeBuild project, an ECR Repository, and CodePipeline pipeline
  that handles the build process for Java Spring Boot projects.

Parameters:
  InstanceType:
    Type: String
    Description: |
      Type of EC2 Instance
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.medium
      - t2-small

  NameOfService:
    Type: String
    Description: |
      ServiceName  

  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName



Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0230bd60aa48260c6
    us-west-1:
      AMI: ami-06e4ca05d431835e9
    eu-west-1:
      AMI: ami-07355fe79b493752d   


Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata: 
      AWS::CloudFormation::Init:
        config: 
          packages: 
            yum:
              httpd: []
              php: []
          files: 
            /var/www/html/index.php:
              content: !Sub |
                <?php print "Hello world Shania is PIG and Anush is elephant!"; ?>
          services: 
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
    Properties:
      InstanceType: !Ref InstanceType
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - AMI
      SecurityGroupIds: 
        - !Ref MySecurityGroup
      #Tags:
      #  - Key: Name
      #  - Value: !Ref NameOfService
      KeyName: !Ref KeyPair
      UserData:
        'Fn::Base64': 
          !Sub |
            #!/bin/bash -xe            
            # Ensure AWS CFN Bootstrap is the latest
            yum install -y aws-cfn-bootstrap
            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance  --region ${AWS::Region}

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open Ports 22 and 80
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0 

Outputs:
#   EC2PublicIP:
#     Description: The Public DNS for the EC2 Instance
#     Value: !GetAtt
#       - EC2Instance
#       - PublicIpAddress  
        
  EC2DNS:
    Description: The Public DNS for the EC2 Instance
    Value: !GetAtt
      - EC2Instance
      - PublicDnsName     

